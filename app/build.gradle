buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.2.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'net.researchgate.release'
apply plugin: 'license'

if (project.hasProperty("rpicheck.keystore")
        && new File(project.property("rpicheck.keystore")).exists()) {
    // sign apk
    apply from: "gradle/signing.gradle";
    // copy signed apk to local release apk folder
    apply from: "gradle/release-local.gradle";
}

apply from: "$project.rootDir/gradle/license.gradle"
apply from: "gradle/release.gradle"

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "de.eidottermihi.raspicheck"
        minSdkVersion 9
        targetSdkVersion 22
        versionName version
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        warning 'InvalidPackage', 'MissingTranslation'
    }
}

dependencies {
    compile project(':libraries:ssh')
    compile project(':libraries:file-explorer')
    compile 'de.larsgrefer:android-library:0.7.2'
    compile 'org.ocpsoft.prettytime:prettytime:2.1.2.Final'
    compile('com.github.tony19:logback-android-classic:1.1.1-3') {
        exclude group: 'com.google.android', module: 'android'
    }
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'com.google.code.findbugs:jsr305:2.0.2'
    compile 'com.google.code.gson:gson:2.3.1'
}

license {
    exclude "**/sheetrock/**"
}

task licenseFormatAndroid (type:nl.javadude.gradle.plugins.license.License) {
    source = fileTree(dir:"src").include ("**/*.java")
}

licenseFormat.dependsOn licenseFormatAndroid

